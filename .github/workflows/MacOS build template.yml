name: MacOS build template

on:
  workflow_call:

jobs:
  ThunderClientLibraries:

    runs-on: macos-14

    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]

    name: Build type - ${{matrix.build_type}}
    steps:
# --------- Packages & artifacts ---------
    - name: Install necessary packages
      run: |
          brew update
          brew upgrade
          brew install ninja zlib
          python3 -m venv venv
          source venv/bin/activate
          pip install jsonref

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ThunderInterfaces-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}

    - name: Unpack files
      run: |
        tar -xvzf ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz
        rm ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz

# ----- Regex & checkout -----
    - name: Checkout ThunderClientLibraries
      uses: actions/checkout@v4
      with:
        path: ThunderClientLibraries
        repository: ${{github.repository_owner}}/ThunderClientLibraries

    - name: Regex ThunderClientLibraries
      if: contains(github.event.pull_request.body, '[Options:')
      id: clientlibs
      uses: AsasInnab/regex-action@v1
      with:
        regex_pattern: '(?<=\[Options:).*(?=\])'
        regex_flags: 'gim'
        search_string: ${{github.event.pull_request.body}}

# ----- Building & uploading -----
    - name: Build ThunderClientLibraries
      run: |
        source venv/bin/activate
        cmake -G Ninja -S ThunderClientLibraries -B ${{matrix.build_type}}/build/ThunderClientLibraries \
        -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic -Werror" \
        -DCMAKE_C_FLAGS="-Wall -Wextra -Wpedantic -Werror" \
        -DCMAKE_INSTALL_PREFIX="${{matrix.build_type}}/install/usr" \
        -DCMAKE_MODULE_PATH="${PWD}/${{matrix.build_type}}/install/usr/include/WPEFramework/Modules" \
        -DCMAKE_CXX_STANDARD=11 \
        -DBLUETOOTHAUDIOSINK=ON \
        -DBLUETOOTHAUDIOSOURCE=ON \
        -DCDMI=ON \
        -DCRYPTOGRAPHY=ON \
        -DCRYPTOGRAPHY_IMPLEMENTATION="OpenSSL" \
        -DDEVICEINFO=ON \
        -DDISPLAYINFO=ON \
        -DLOCALTRACER=ON \
        -DSECURITYAGENT=ON \
        -DPLAYERINFO=ON \
        -DPROTOCOLS=ON \
        -DVIRTUALINPUT=ON \
        ${{steps.clientlibs.outputs.first_match}}
        cmake --build ${{matrix.build_type}}/build/ThunderClientLibraries --target install

    - name: Tar files
      run: tar -czvf ${{matrix.build_type}}.tar.gz ${{matrix.build_type}}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ThunderClientLibraries-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}.tar.gz
